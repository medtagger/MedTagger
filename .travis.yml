sudo: required
env:
  global:
    - secure: Uol6Dz+G0fxqQIfnDOBT9mSpF8yXJExVITUkcFNPbjeBI3oNCDPYfJHPogFGnsQBA3xEJRdjCeWYLo8Ko87nlaYCrn8Ci1mghvUyJI8ZheplPaxjTZ22u8IFhnlgCgTlXo+ckV/dpBdJY0+sOEQBcsTwZ+nOFrUsfmVBN8FU0iksUuEmDRB3TV2q2uvN2tQusIHVEcCTrOi8WQFiQRLCjM9mKWe0/mbrRPl8nPjclS68DUjHOKDsG/UwEBEDt0QtLRPaEH8xvc+Si9+SxKTE8R+lrbiPtbzms4nd3y5z1q55rx8GXJctER/+7gZ4wiV7mcXH3Sq1qLPF1y5j02qpuvxEJeUuRtYE+kn1rDBqfK/PJAaoLgff977TB8DsghZ4e7i6Ie9kkXx65DfgZdbOTK9AymGQbM/2+zMaV0yflG/5T4m7z2rIlKrmzjqo5t2jWd4oTXobfUf+PZLs0PneI1mm+Hw+g/GmoCJ7pjSBdct05WwLOhvOIP5N7MSGEW8Wv+Q1DlY0y3rCfdvWrCSUKgocBvIaU/3MsJthMNLPqdwlrYMnkDGWXGk1XoqqSn4h876ccnOXaBon3HX8ANuw53aOTRNszi/tB0zQDSgdVhyDRqSIFGAIWos7InIl1PyByAN9YP1lGS4wXhI7cw6+hZy8T3+QCyt4E9gm0QYYKss=

before_install:
  - git remote set-branches --add origin master
  - git fetch

matrix:
  include:
    # E2E Tests
    - language: node_js
      services:
        - docker
      env: TESTS=e2e
      if: branch = master
      node_js:
        - "8"
      script:
        - make e2e_docker

    # Backend - linters & unit tests
    - language: python
      services:
        - docker
      env: BACKEND=linters_and_unit_tests
      script:
        - ./.travis/run_tests_if_subproject_changed.py backend --command="
           docker-compose build medtagger_backend_rest medtagger_backend_websocket medtagger_backend_worker medtagger_backend_database_migrations &&
           docker-compose run --no-deps medtagger_backend_rest /bin/bash -c \"make install_dev_packages && make test\""

    # Backend - functional tests
    - language: python
      services:
        - docker
      env: BACKEND=functional_tests
      if: branch = master
      script:
        - ./.travis/run_tests_if_subproject_changed.py backend --command="
           docker-compose -f ./.travis/backend_functional_tests_docker-compose.yml up -d cassandra postgres rabbitmq &&
           docker-compose -f ./.travis/backend_functional_tests_docker-compose.yml run medtagger_backend_functional_tests &&
           docker-compose down"

    # Frontend - linters
    - language: node_js
      env: FRONTEND=linters_and_unit_tests
      addons:
        chrome: stable
      node_js:
        - "8"
      script:
        - export DISPLAY=:99.0
        - sh -e /etc/init.d/xvfb start
        - ./.travis/run_tests_if_subproject_changed.py frontend --command="
           cd frontend/ &&
           npm i &&
           ng lint &&
           ng test --watch=false"

    # Frontend - build production Docker
    - language: node_js
      services:
        - docker
      env: FRONTEND=production_build
      node_js:
        - "8"
      script:
        - ./.travis/run_tests_if_subproject_changed.py frontend --command="
           docker-compose build medtagger_frontend"
