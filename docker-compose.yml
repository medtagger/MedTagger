version: '3'

services:
  reverse-proxy:
    image: traefik
    restart: unless-stopped
    command: --configFile=/var/traefik/traefik.toml
    ports:
      - 80:80
      - 52000:8080
    volumes:
      - $PWD/traefik.toml:/var/traefik/traefik.toml
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=false"

  cassandra:
    image: cassandra
    restart: unless-stopped
    volumes:
      - cassandra-data:/var/lib/cassandra
    ports:
      - 9042:9042
    labels:
      - "traefik.enable=false"

  rabbitmq:
    image: rabbitmq:management
    restart: unless-stopped
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/mnesia
    ports:
      - 5672:5672
      - 15672:15672
    labels:
      - "traefik.enable=false"

  postgres:
    image: postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: medtagger
      POSTGRES_USER: medtagger_user
      POSTGRES_PASSWORD: MedTa99er!
    # Increase maximum number of connections to give more space for application
    command: postgres -c 'max_connections=500'
    labels:
      - "traefik.enable=false"

  netdata:
    image: netdata/netdata
    restart: unless-stopped
    ports:
      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  medtagger_frontend:
    image: medtagger/frontend_ui:${MEDTAGGER_VERSION}
    restart: unless-stopped
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        - PRODUCTION=${MEDTAGGER__FRONTEND_PRODUCTION}
        - SUBDIRECTORY=${MEDTAGGER__HOST_ON_SUBDIRECTORY}
    depends_on:
      - medtagger_backend_rest
    labels:
      - "traefik.backend=medtagger_frontend"
      - "traefik.frontend.rule=PathPrefix: ${MEDTAGGER__HOST_ON_SUBDIRECTORY}; ReplacePathRegex: ${MEDTAGGER__HOST_ON_SUBDIRECTORY}(.*) $$1"

  medtagger_backend_rest:
    image: medtagger/backend_rest:${MEDTAGGER_VERSION}
    restart: unless-stopped
    env_file:
      - ./backend/docker/backend.env
    build:
      context: backend
      dockerfile: docker/Dockerfile_rest
      args:
        - CASS_DRIVER_NO_CYTHON=${CASSANDRA_DRIVER__DISABLE_CYTHON}
        - CASS_DRIVER_NO_EXTENSIONS=${CASSANDRA_DRIVER__DISABLE_EXTENTIONS}
    depends_on:
      - cassandra
      - rabbitmq
      - postgres
      - medtagger_backend_websocket
      - medtagger_backend_worker
    command: bash -c "./scripts/wait_for_dependencies.sh && make run_rest_production"
    volumes:
      - ${PWD}/.medtagger.yml:/medtagger_backend/.medtagger.yml
    labels:
      - "traefik.backend=medtagger_backend_rest"
      - "traefik.frontend.rule=PathPrefix: ${MEDTAGGER__HOST_ON_SUBDIRECTORY}/api/v1/,${MEDTAGGER__HOST_ON_SUBDIRECTORY}/swaggerui/; ReplacePathRegex: ${MEDTAGGER__HOST_ON_SUBDIRECTORY}(.*) $$1"

  medtagger_backend_websocket:
    image: medtagger/backend_websocket:${MEDTAGGER_VERSION}
    restart: unless-stopped
    env_file:
      - ./backend/docker/backend.env
    build:
      context: backend
      dockerfile: docker/Dockerfile_websocket
      args:
        - CASS_DRIVER_NO_CYTHON=${CASSANDRA_DRIVER__DISABLE_CYTHON}
        - CASS_DRIVER_NO_EXTENSIONS=${CASSANDRA_DRIVER__DISABLE_EXTENTIONS}
    depends_on:
      - cassandra
      - rabbitmq
      - postgres
    command: bash -c "./scripts/wait_for_dependencies.sh && make run_websocket_production"
    volumes:
      - ${PWD}/.medtagger.yml:/medtagger_backend/.medtagger.yml
    labels:
      - "traefik.backend=medtagger_backend_websocket"
      - "traefik.backend.loadbalancer.stickiness=true"
      - "traefik.backend.loadbalancer.stickiness.cookieName=MEDTAGER_WEBSOCKET_NODE"
      - "traefik.frontend.rule=PathPrefix: ${MEDTAGGER__HOST_ON_SUBDIRECTORY}/socket.io; ReplacePathRegex: ${MEDTAGGER__HOST_ON_SUBDIRECTORY}(.*) $$1"

  medtagger_backend_worker:
    image: medtagger/backend_worker:${MEDTAGGER_VERSION}
    restart: unless-stopped
    env_file:
      - ./backend/docker/backend.env
    build:
      context: backend
      dockerfile: docker/Dockerfile_worker
      args:
        - CASS_DRIVER_NO_CYTHON=${CASSANDRA_DRIVER__DISABLE_CYTHON}
        - CASS_DRIVER_NO_EXTENSIONS=${CASSANDRA_DRIVER__DISABLE_EXTENTIONS}
    depends_on:
      - cassandra
      - rabbitmq
      - postgres
    command: bash -c "./scripts/wait_for_dependencies.sh && make run_workers"
    volumes:
      - ${PWD}/.medtagger.yml:/medtagger_backend/.medtagger.yml
    labels:
      - "traefik.enable=false"

  medtagger_backend_database_migrations:
    image: medtagger/backend_database_migrations:${MEDTAGGER_VERSION}
    env_file:
      - ./backend/docker/backend.env
    build:
      context: backend
      dockerfile: docker/Dockerfile_database_migrations
      args:
        - CASS_DRIVER_NO_CYTHON=${CASSANDRA_DRIVER__DISABLE_CYTHON}
        - CASS_DRIVER_NO_EXTENSIONS=${CASSANDRA_DRIVER__DISABLE_EXTENTIONS}
    depends_on:
      - cassandra
      - rabbitmq
      - postgres
    command: bash -c "./scripts/dev__prepare_backend.sh"
    volumes:
      - ${PWD}/.medtagger.yml:/medtagger_backend/.medtagger.yml
    labels:
      - "traefik.enable=false"

  medtagger_jupyter_notebook:
    image: medtagger/jupyter_notebook
    restart: unless-stopped
    ports:
      - 52001:52001
    env_file:
      - ./backend/docker/backend.env
    build:
      context: backend
      dockerfile: docker/Dockerfile_jupyter_notebook
      args:
        - CASS_DRIVER_NO_CYTHON=${CASSANDRA_DRIVER__DISABLE_CYTHON}
        - CASS_DRIVER_NO_EXTENSIONS=${CASSANDRA_DRIVER__DISABLE_EXTENTIONS}
        - JUPYTER_NOTEBOOK_PASSWORD=${JUPYTER_NOTEBOOK_PASSWORD}
    command: bash -c "cd /medtagger/ && jupyter notebook --ip 0.0.0.0 --port 52001 --no-browser --allow-root"
    volumes:
      - ${PWD}:/medtagger/
    labels:
      - "traefik.enable=false"

volumes:
  cassandra-data:
  rabbitmq-data:
  postgres-data:
